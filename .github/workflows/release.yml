name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: ['3.9']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Git Tag
        uses: olegtarasov/get-tag@v2.1
        id: tagName
        with:
          tagRegex: 'v(.*)'
          tagRegexGroup: 1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install poetry
          poetry install
      - name: Run Tests
        run: poetry run python -m scripts.tests
      - name: Run Build
        run: poetry build
      - name: Publish Package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: GitHub Release
        uses: docker://antonyurchenko/git-release:latest
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_ACCESS_TOKEN }}
        with:
          args: dist/*
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./docker/Dockerfile
          push: true
          tags: >-
            ${{ secrets.DOCKER_HUB_USERNAME }}/kaskade:latest,
            ${{ secrets.DOCKER_HUB_USERNAME }}/kaskade:${{ steps.tagName.outputs.tag }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}